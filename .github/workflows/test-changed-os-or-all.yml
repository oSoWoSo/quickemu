name: "Test Supported Operating Systems"

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  generate-matrix:
    name: "Generate Matrix for Changed Files"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4

      - name: "Get Changed Files"
        id: changed-files
        run: |
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            echo "First commit detected. No changes to compare."
            touch changed_files.txt
          else
            if [[ $GITHUB_EVENT_NAME == "pull_request" ]]; then
              git diff --name-only origin/${{ github.base_ref }} > changed_files.txt
            else
              git diff --name-only HEAD^ > changed_files.txt
            fi
          fi
          echo "Changed files:"
          cat changed_files.txt || echo "No changed files."

      - name: "Generate Matrix"
        id: set-matrix
        run: |
          CHANGED_FILES=$(grep "^actions/" changed_files.txt || true)
          if [[ -z "$CHANGED_FILES" ]]; then
            CHANGED_FILES=$(find actions/ -maxdepth 1 -type f -printf "%f\n")
          else
            CHANGED_FILES=$(echo "$CHANGED_FILES" | sed 's|actions/||g')
          fi
          MATRIX="{\"include\": ["
          for file in $CHANGED_FILES; do
            MATRIX+="{\"file\": \"$file\"},"
          done
          MATRIX="${MATRIX%,}]}"
          echo "Generated Matrix: $MATRIX"
          echo "::set-output name=matrix::$MATRIX"

      - name: "Display Matrix"
        run: |
          echo "Matrix:"
          echo "${{ steps.set-matrix.outputs.matrix }}"

  run-actions:
    name: "Check 💿️"
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v4

      - name: "Install dependencies 📦️"
        run: |
          sudo apt-get -y update
          sudo apt-get -y install curl jq

      - name: "Run Check for ${{ matrix.file }}"
        run: |
          mkdir -p results
          ./quickget --check ${{ matrix.file }} | tee results/${{ matrix.file }}.txt
          if grep -vqE '^(PASS:|SKIP:)' results/${{ matrix.file }}.txt; then
            grep -vE '^(PASS:|SKIP:)' results/${{ matrix.file }}.txt >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
